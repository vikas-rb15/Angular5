Data Binding : Communication between the typescript code (business logic)and html template(what we see).

Output Data(Type Script to HTML)
1: String Interpolation ( Ex: {{data}})
2: Property Binding (Ex: [property] = "data")

React to (user) event
3: Event Binding( Ex: (event)="expression")

Combination of both: Two-Way-Binding( Ex: [(ngModel)]="data")

$event = event emitted by that element.

To be able to use 'ngModel', the FormsModule(form @angular/forms) need to be added to your imports[] array in the Appmodule (should be there by default in a CLI project).

*****************************************************
Directives: Directives are instructions in the DOM!.
For Example: "componemt" are such instructions in the DOM(@component), 
ngIf is a structural directive thats why we add * before it, means it changes the structure of our DOM

<p *ngIf="condition"; else conditionfailed> display if condition is true</p>
<ng-template #conditionfailed>
<p>display if condition is false</p>
</ng-template>

-- Unlike structural directives, attribute directives dont add or remove elements.
They only change the element they were placed on.

ngStyle attribute directive: it is use to provide styling to the html elements.
it is used like attribute, alos using properting binding to configure it.
Ex: <p [ngStyle]="{backgroundColor:getColor()}">Content</p> // here getColor() function returns color.

ngClass attribute directive: It is ised to provide/add classes to the html elements dynamically.
Ex: <p [ngClass]="{className:condition}">Content</p> // if condition is true then className is added else will not be added
it is used like attribute, alos using properting binding to configure it.

ngFor structural directive: it is used like for loop in C#.
syntax: <p *ngFor="let object of listOfObjects"></p>
Here as number of listOfObjects are ther those number of p element gets created;